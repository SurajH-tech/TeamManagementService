// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TMS.Infrastructure.Data;

#nullable disable

namespace TMS.Infrastructure.Migrations
{
    [DbContext(typeof(TMSDbContext))]
    [Migration("20240424134215_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TMS.Core.Entities.BusinessUnit", b =>
                {
                    b.Property<int>("BU_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BU_Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BU_Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BU_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BU_Type")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("BU_Id");

                    b.ToTable("BusinessUnits");
                });

            modelBuilder.Entity("TMS.Core.Entities.BusinessUnitCategory", b =>
                {
                    b.Property<int>("BUC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BUC_Id"));

                    b.Property<int>("BU_Id")
                        .HasColumnType("int");

                    b.Property<string>("ZurichLineOfBusiness")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BUC_Id");

                    b.HasIndex("BU_Id");

                    b.ToTable("BusinessUnitCategories");
                });

            modelBuilder.Entity("TMS.Core.Entities.BusinessUnitMember", b =>
                {
                    b.Property<int>("BUM_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BUM_Id"));

                    b.Property<int>("BU_Id")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeLoginId")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsManager")
                        .HasColumnType("bit");

                    b.HasKey("BUM_Id");

                    b.HasIndex("BU_Id");

                    b.HasIndex("EmployeeLoginId");

                    b.ToTable("BusinessUnitMembers");
                });

            modelBuilder.Entity("TMS.Core.Entities.Employee", b =>
                {
                    b.Property<string>("Emp_LoginId")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("BU_Id")
                        .HasColumnType("int");

                    b.Property<int?>("BusinessUnitBU_Id")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Emp_LoginId");

                    b.HasIndex("BusinessUnitBU_Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TMS.Core.Entities.BusinessUnitCategory", b =>
                {
                    b.HasOne("TMS.Core.Entities.BusinessUnit", "BusinessUnit")
                        .WithMany("BusinessUnitCategories")
                        .HasForeignKey("BU_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessUnit");
                });

            modelBuilder.Entity("TMS.Core.Entities.BusinessUnitMember", b =>
                {
                    b.HasOne("TMS.Core.Entities.BusinessUnit", "BusinessUnit")
                        .WithMany("BusinessUnitMembers")
                        .HasForeignKey("BU_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMS.Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeLoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessUnit");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TMS.Core.Entities.Employee", b =>
                {
                    b.HasOne("TMS.Core.Entities.BusinessUnit", null)
                        .WithMany("Employees")
                        .HasForeignKey("BusinessUnitBU_Id");
                });

            modelBuilder.Entity("TMS.Core.Entities.BusinessUnit", b =>
                {
                    b.Navigation("BusinessUnitCategories");

                    b.Navigation("BusinessUnitMembers");

                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
